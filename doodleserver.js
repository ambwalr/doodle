// Generated by CoffeeScript 1.6.3
(function() {
  var app, cache, chatlog, express, io, ior, port, server, zlib;

  port = 8008;

  express = require('express');

  app = express();

  server = require('http').Server(app);

  ior = require('socket.io');

  io = ior.listen(server);

  zlib = require('zlib');

  server.listen(port);

  app.use(express.bodyParser());

  cache = [];

  chatlog = [];

  app.get('/getsession', function(req, res) {
    var buf;
    res.writeHead(200, {
      "Content-Type": "application/json",
      "Content-Encoding": "gzip"
    });
    buf = new Buffer(JSON.stringify(cache), 'utf-8');
    return zlib.gzip(buf, function(_, result) {
      return res.end(result);
    });
  });

  app.get('/chatlog', function(req, res) {
    var buf;
    res.writeHead(200, {
      "Content-Type": "application/json",
      "Content-Encoding": "gzip"
    });
    buf = new Buffer(JSON.stringify(chatlog), 'utf-8');
    return zlib.gzip(buf, function(_, result) {
      return res.end(result);
    });
  });

  app.use('/', express["static"](__dirname + '/'));

  app.use(express["static"](__dirname + '/public'));

  io.sockets.on('connection', function(socket) {
    socket.on('stroke', function(data) {
      cache.push(data);
      return socket.broadcast.emit('stroke', data);
    });
    socket.on('say', function(data) {
      data.time = new Date().getTime();
      chatlog.push(data);
      while (chatlog.length > 10) {
        chatlog.shift();
      }
      return socket.broadcast.emit('say', data);
    });
    return socket.on('bomb', function(data) {
      cache = [];
      return socket.broadcast.emit('bomb');
    });
  });

}).call(this);
